const packet_start = Buffer.from([
  0xcf, 0xb6, 0x00, 0x50, 0xda, 0x54, 0x45, 0x54,
  0x5a, 0x13, 0xac, 0x87, 0x80, 0x18, 0x01, 0xf6,
])
const ip4_checksum_bytes = Buffer.from([0xcb, 0x13])
const ip6_checksum_bytes = Buffer.from([0xe1, 0xb9])
const packet_remainder = Buffer.from([
  0x00, 0x00, 0x01, 0x01, 0x08, 0x0a,
  0x61, 0x3d, 0x18, 0x3e, 0xa6, 0x16, 0x89, 0xea,
  0x47, 0x45, 0x54, 0x20, 0x2f, 0x7e, 0x72, 0x68,
  0x61, 0x72, 0x76, 0x65, 0x79, 0x2f, 0x20, 0x48,
  0x54, 0x54, 0x50, 0x2f, 0x31, 0x2e, 0x31, 0x0d,
  0x0a, 0x48, 0x6f, 0x73, 0x74, 0x3a, 0x20, 0x70,
  0x65, 0x6f, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x6f,
  0x79, 0x6e, 0x6f, 0x2e, 0x65, 0x64, 0x75, 0x0d,
  0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
  0x69, 0x6f, 0x6e, 0x3a, 0x20, 0x6b, 0x65, 0x65,
  0x70, 0x2d, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x0d,
  0x0a, 0x44, 0x4e, 0x54, 0x3a, 0x20, 0x31, 0x0d,
  0x0a, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
  0x2d, 0x49, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72,
  0x65, 0x2d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
  0x74, 0x73, 0x3a, 0x20, 0x31, 0x0d, 0x0a, 0x55,
  0x73, 0x65, 0x72, 0x2d, 0x41, 0x67, 0x65, 0x6e,
  0x74, 0x3a, 0x20, 0x4d, 0x6f, 0x7a, 0x69, 0x6c,
  0x6c, 0x61, 0x2f, 0x35, 0x2e, 0x30, 0x20, 0x28,
  0x58, 0x31, 0x31, 0x3b, 0x20, 0x4c, 0x69, 0x6e,
  0x75, 0x78, 0x20, 0x78, 0x38, 0x36, 0x5f, 0x36,
  0x34, 0x29, 0x20, 0x41, 0x70, 0x70, 0x6c, 0x65,
  0x57, 0x65, 0x62, 0x4b, 0x69, 0x74, 0x2f, 0x35,
  0x33, 0x37, 0x2e, 0x33, 0x36, 0x20, 0x28, 0x4b,
  0x48, 0x54, 0x4d, 0x4c, 0x2c, 0x20, 0x6c, 0x69,
  0x6b, 0x65, 0x20, 0x47, 0x65, 0x63, 0x6b, 0x6f,
  0x29, 0x20, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65,
  0x2f, 0x38, 0x35, 0x2e, 0x30, 0x2e, 0x34, 0x31,
  0x38, 0x33, 0x2e, 0x31, 0x32, 0x31, 0x20, 0x53,
  0x61, 0x66, 0x61, 0x72, 0x69, 0x2f, 0x35, 0x33,
  0x37, 0x2e, 0x33, 0x36, 0x0d, 0x0a, 0x41, 0x63,
  0x63, 0x65, 0x70, 0x74, 0x3a, 0x20, 0x74, 0x65,
  0x78, 0x74, 0x2f, 0x68, 0x74, 0x6d, 0x6c, 0x2c,
  0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
  0x69, 0x6f, 0x6e, 0x2f, 0x78, 0x68, 0x74, 0x6d,
  0x6c, 0x2b, 0x78, 0x6d, 0x6c, 0x2c, 0x61, 0x70,
  0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
  0x6e, 0x2f, 0x78, 0x6d, 0x6c, 0x3b, 0x71, 0x3d,
  0x30, 0x2e, 0x39, 0x2c, 0x69, 0x6d, 0x61, 0x67,
  0x65, 0x2f, 0x61, 0x76, 0x69, 0x66, 0x2c, 0x69,
  0x6d, 0x61, 0x67, 0x65, 0x2f, 0x77, 0x65, 0x62,
  0x70, 0x2c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2f,
  0x61, 0x70, 0x6e, 0x67, 0x2c, 0x2a, 0x2f, 0x2a,
  0x3b, 0x71, 0x3d, 0x30, 0x2e, 0x38, 0x2c, 0x61,
  0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
  0x6f, 0x6e, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x65,
  0x64, 0x2d, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
  0x67, 0x65, 0x3b, 0x76, 0x3d, 0x62, 0x33, 0x3b,
  0x71, 0x3d, 0x30, 0x2e, 0x39, 0x0d, 0x0a, 0x41,
  0x63, 0x63, 0x65, 0x70, 0x74, 0x2d, 0x45, 0x6e,
  0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x3a, 0x20,
  0x67, 0x7a, 0x69, 0x70, 0x2c, 0x20, 0x64, 0x65,
  0x66, 0x6c, 0x61, 0x74, 0x65, 0x0d, 0x0a, 0x41,
  0x63, 0x63, 0x65, 0x70, 0x74, 0x2d, 0x4c, 0x61,
  0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x3a, 0x20,
  0x65, 0x6e, 0x2d, 0x55, 0x53, 0x2c, 0x65, 0x6e,
  0x3b, 0x71, 0x3d, 0x30, 0x2e, 0x39, 0x0d, 0x0a,
  0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x3a, 0x20,
  0x5f, 0x67, 0x61, 0x3d, 0x47, 0x41, 0x31, 0x2e,
  0x32, 0x2e, 0x31, 0x33, 0x33, 0x37, 0x36, 0x37,
  0x39, 0x36, 0x31, 0x32, 0x2e, 0x31, 0x36, 0x30,
  0x32, 0x39, 0x35, 0x35, 0x33, 0x32, 0x36, 0x3b,
  0x20, 0x5f, 0x67, 0x69, 0x64, 0x3d, 0x47, 0x41,
  0x31, 0x2e, 0x32, 0x2e, 0x31, 0x39, 0x31, 0x33,
  0x35, 0x32, 0x31, 0x36, 0x39, 0x37, 0x2e, 0x31,
  0x36, 0x30, 0x32, 0x39, 0x35, 0x35, 0x33, 0x32,
  0x36, 0x0d, 0x0a, 0x0d, 0x0a,
])

module.exports = {
  ip4_packet: Buffer.concat([
    packet_start,
    ip4_checksum_bytes,
    packet_remainder,
  ]),
  ip6_packet: Buffer.concat([
    packet_start,
    ip6_checksum_bytes,
    packet_remainder,
  ]),
  ip4_pseudo_header: Buffer.from([
    0xc0, 0xa8, 0x01, 0x89, 0x8d, 0xa4, 0x18, 0xdc,
    0x00, 0x06, 0x02, 0x25
  ]),
  ip6_pseudo_header: Buffer.from([
    0x23, 0x45, 0x04, 0x25, 0x2C, 0xA1, 0x00, 0x00,
    0x00, 0x00, 0x05, 0x67, 0x56, 0x73, 0x23, 0xB5,
    0xFE, 0x80, 0xCD, 0x00, 0x00, 0x00, 0x0C, 0xDE,
    0x12, 0x57, 0x00, 0x00, 0x21, 0x1E, 0x72, 0x9C,
    0x00, 0x00, 0x02, 0x25, 0x00, 0x00, 0x00, 0x06
  ]),
  parsed: {
    protocol: 'TCP',
    header: {
      source_port: 53174,
      destination_port: 80,
      sequence_number: 3662955860,
      acknowledgement_number: 1511238791,
      header_length: 8,
      header_bytes: 32,
      control_flags: {
        ECN_CWR: false,
        ECN_ECHO: false,
        URG: false,
        ACK: true,
        PSH: true,
        RST: false,
        SYN: false,
        FIN: false,
      },
      window_size: 502,
      checksum_ip4: 51987, // 0xcb13
      checksum_ip6: 57785, // 0xe1b9
      urgent_pointer: 0,
      options: [
        {
          type_id: 1,
          type: 'NOP',
          length: 2
        },
        {
          type_id: 1,
          type: 'NOP',
          length: 2
        },
        {
          type_id: 8,
          type: 'Timestamp',
          length: 10,
          TSval: 1631393854,
          TSecr: 2786494954
        }
      ]
    },
    pseudo_header: {
      ip4: {
        pseudo_header_protocol: 'IPv4',
        source_ip: '192.168.1.137',
        destination_ip: '141.164.24.220',
        protocol: 6,
        length: 549
      },
      ip6: {
        pseudo_header_protocol: 'IPv6',
        source_ip: '2345:0425:2CA1:0000:0000:0567:5673:23B5',
        destination_ip: 'FE80:CD00:0000:0CDE:1257:0000:211E:729C',
        protocol: 6,
        length: 549,
      },
    },
    payload: Buffer.from([
      0x47, 0x45, 0x54, 0x20, 0x2f, 0x7e, 0x72, 0x68,
      0x61, 0x72, 0x76, 0x65, 0x79, 0x2f, 0x20, 0x48,
      0x54, 0x54, 0x50, 0x2f, 0x31, 0x2e, 0x31, 0x0d,
      0x0a, 0x48, 0x6f, 0x73, 0x74, 0x3a, 0x20, 0x70,
      0x65, 0x6f, 0x70, 0x6c, 0x65, 0x2e, 0x6c, 0x6f,
      0x79, 0x6e, 0x6f, 0x2e, 0x65, 0x64, 0x75, 0x0d,
      0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
      0x69, 0x6f, 0x6e, 0x3a, 0x20, 0x6b, 0x65, 0x65,
      0x70, 0x2d, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x0d,
      0x0a, 0x44, 0x4e, 0x54, 0x3a, 0x20, 0x31, 0x0d,
      0x0a, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
      0x2d, 0x49, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72,
      0x65, 0x2d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
      0x74, 0x73, 0x3a, 0x20, 0x31, 0x0d, 0x0a, 0x55,
      0x73, 0x65, 0x72, 0x2d, 0x41, 0x67, 0x65, 0x6e,
      0x74, 0x3a, 0x20, 0x4d, 0x6f, 0x7a, 0x69, 0x6c,
      0x6c, 0x61, 0x2f, 0x35, 0x2e, 0x30, 0x20, 0x28,
      0x58, 0x31, 0x31, 0x3b, 0x20, 0x4c, 0x69, 0x6e,
      0x75, 0x78, 0x20, 0x78, 0x38, 0x36, 0x5f, 0x36,
      0x34, 0x29, 0x20, 0x41, 0x70, 0x70, 0x6c, 0x65,
      0x57, 0x65, 0x62, 0x4b, 0x69, 0x74, 0x2f, 0x35,
      0x33, 0x37, 0x2e, 0x33, 0x36, 0x20, 0x28, 0x4b,
      0x48, 0x54, 0x4d, 0x4c, 0x2c, 0x20, 0x6c, 0x69,
      0x6b, 0x65, 0x20, 0x47, 0x65, 0x63, 0x6b, 0x6f,
      0x29, 0x20, 0x43, 0x68, 0x72, 0x6f, 0x6d, 0x65,
      0x2f, 0x38, 0x35, 0x2e, 0x30, 0x2e, 0x34, 0x31,
      0x38, 0x33, 0x2e, 0x31, 0x32, 0x31, 0x20, 0x53,
      0x61, 0x66, 0x61, 0x72, 0x69, 0x2f, 0x35, 0x33,
      0x37, 0x2e, 0x33, 0x36, 0x0d, 0x0a, 0x41, 0x63,
      0x63, 0x65, 0x70, 0x74, 0x3a, 0x20, 0x74, 0x65,
      0x78, 0x74, 0x2f, 0x68, 0x74, 0x6d, 0x6c, 0x2c,
      0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
      0x69, 0x6f, 0x6e, 0x2f, 0x78, 0x68, 0x74, 0x6d,
      0x6c, 0x2b, 0x78, 0x6d, 0x6c, 0x2c, 0x61, 0x70,
      0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
      0x6e, 0x2f, 0x78, 0x6d, 0x6c, 0x3b, 0x71, 0x3d,
      0x30, 0x2e, 0x39, 0x2c, 0x69, 0x6d, 0x61, 0x67,
      0x65, 0x2f, 0x61, 0x76, 0x69, 0x66, 0x2c, 0x69,
      0x6d, 0x61, 0x67, 0x65, 0x2f, 0x77, 0x65, 0x62,
      0x70, 0x2c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2f,
      0x61, 0x70, 0x6e, 0x67, 0x2c, 0x2a, 0x2f, 0x2a,
      0x3b, 0x71, 0x3d, 0x30, 0x2e, 0x38, 0x2c, 0x61,
      0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
      0x6f, 0x6e, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x65,
      0x64, 0x2d, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
      0x67, 0x65, 0x3b, 0x76, 0x3d, 0x62, 0x33, 0x3b,
      0x71, 0x3d, 0x30, 0x2e, 0x39, 0x0d, 0x0a, 0x41,
      0x63, 0x63, 0x65, 0x70, 0x74, 0x2d, 0x45, 0x6e,
      0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x3a, 0x20,
      0x67, 0x7a, 0x69, 0x70, 0x2c, 0x20, 0x64, 0x65,
      0x66, 0x6c, 0x61, 0x74, 0x65, 0x0d, 0x0a, 0x41,
      0x63, 0x63, 0x65, 0x70, 0x74, 0x2d, 0x4c, 0x61,
      0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x3a, 0x20,
      0x65, 0x6e, 0x2d, 0x55, 0x53, 0x2c, 0x65, 0x6e,
      0x3b, 0x71, 0x3d, 0x30, 0x2e, 0x39, 0x0d, 0x0a,
      0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x3a, 0x20,
      0x5f, 0x67, 0x61, 0x3d, 0x47, 0x41, 0x31, 0x2e,
      0x32, 0x2e, 0x31, 0x33, 0x33, 0x37, 0x36, 0x37,
      0x39, 0x36, 0x31, 0x32, 0x2e, 0x31, 0x36, 0x30,
      0x32, 0x39, 0x35, 0x35, 0x33, 0x32, 0x36, 0x3b,
      0x20, 0x5f, 0x67, 0x69, 0x64, 0x3d, 0x47, 0x41,
      0x31, 0x2e, 0x32, 0x2e, 0x31, 0x39, 0x31, 0x33,
      0x35, 0x32, 0x31, 0x36, 0x39, 0x37, 0x2e, 0x31,
      0x36, 0x30, 0x32, 0x39, 0x35, 0x35, 0x33, 0x32,
      0x36, 0x0d, 0x0a, 0x0d, 0x0a
    ]),
    checksum_valid: true
  }
};
